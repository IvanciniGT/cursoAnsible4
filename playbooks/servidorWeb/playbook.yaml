-   name:               Quiero NGINX Arriba !!!!!
    hosts:              localhost
    gather_facts:       false
    
    vars:
        nginx:
            version:    1.15
        web:
            repo:       https://github.com/IvanciniGT/webEjemploAnsible
            dominio:    mipaginita.com
            puerto:     8080
            carpeta:    /home/ubuntu/environment/datos/web
            tests:
                      - end_point:      /index.html
                        status_code:    200
                        respuesta:      Soy el fichero de la WEB
                        
                      - end_point:      /
                        status_code:    200
                        respuesta:      version
                        
        email:          ivan.osuna.ayuste@gmail.com

    pre_tasks:
    
        -   name:       Obtener el SO de la máquina sobre la que trabajo
            setup:      # Esto me rellena el ansible_facts
                gather_subset: 
                      - distribution
            tags:
                      - always  # Este es un tag especial de ANSIBLE
                      
            
        -   name:       Asegurar que estamos en un entorno ubuntu
                        # Detengo el PLAY para el host                  
            meta:       end_host
            when:       # si la máquina NO ES UBUNTU [sistema_operativo]
            tags:
                      - always  # Este es un tag especial de ANSIBLE
                    
        -   name:       Asegurar que tengo los repos de apt actualizados
            apt:
                update_cache: true
            tags:
                      - despliegue
                      - instalacion

        -   name:       Asegurar que git queda instalado en el entorno
            apt:
                name:   git>=1.7.1
                state:  present
            tags:
                      - despliegue

    tasks:
    
        -   name:       Asegurar que NGINX queda instalado en el entorno
            apt:
                name:   "nginx={{nginx.version}}"
                state:  present
            tags:     
                      - instalacion
                      
        -   name:       Asegurar que NGINX queda configurado como necesito para mi web
            template:
                src:    configuracion.nginx.cong
                dest:   /etc/nginx/sites-available/default
                mode:   '0644'
            notify:     REINICIO_REQUERIDO
            tags:     
                      - configuracion

        -   name:       Asegurar que la carpeta para la web está creada 
            file:
                path:   "{{ web.carpeta }}"
                state:  directory
            tags:
                      - despliegue

        -   name:       Asegurar que la última versión del repo está descargada en la carpeta
            git:
                repo:   '{{ web.repo }}'
                dest:   "{{ web.carpeta }}"
            notify:     REINICIO_REQUERIDO
            tags:
                      - despliegue

        -   name:       Asegurar que el servidor web queda arrancado
            service:
                name:   nginx
                state:  started
            register:   arranque
            tags:
                      - despliegue

    post_tasks:
    
        -   name:           Validaciones finales
            block:
            
              - name:       Asegurarme que el servidor web está arrancado (SHELL con un ps)
                            # Miro el proceso a ver si está corriendo
                tags:
                          - pruebas
                          - always
                          
              - name:       Asegurar que el servidor web ha abierto el puerto adecuado (WAITFOR)
                            # puerto 
                tags:
                          - pruebas
                          - always
                          
              - name:       Asegurar que el servidor web sirve la web en ese puerto  (URI)
                            # curl http://localhost:PUERTO/RUTA 
                            #   CODIGO DE RESPUESTA HTTP 200
                            #   SALIDA DONDE PUEDO YO IDENTIFICAR QUE LA WEB ESTA EN MARCHA
                loop:       "{{ web.tests }}"
                tags:
                          - pruebas
                          - always
                          
              - name:       Asegurar que la web está en funcionamiento desde fuera del host remoto (URI)
                            # curl http://DIRECCION:PUERTO/RUTA -> 
                            #   CODIGO DE RESPUESTA HTTP 200
                            #   SALIDA DONDE PUEDO YO IDENTIFICAR QUE LA WEB ESTA EN MARCHA
                loop:       "{{ web.tests }}"
                tags:
                          - pruebas
                          - always
                          
            rescue:
              - name:       Enviar email en caso de fallo (MAIL)
                tags:
                          - notificacion
                          
              - name:       Dar el playbook por fallido (META)
                tags:
                          - always
                          
    handlers:
    
        -   name:       Asegurar que nginx queda reiniciado
            service:
                name:   nginx
                state:  restarted
            when:       arranque is not changed
            listen:
                      - REINICIO_REQUERIDO
